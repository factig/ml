# -*- coding: utf-8 -*-
"""exp8fis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GK_Gm-yE4Am4Y4twqCIajAcIQf0ho3mv
"""

pip install scikit-fuzzy

import numpy as np
import skfuzzy as fuzz
from skfuzzy import control as ctrl

# Fuzzy input variables
temperature = ctrl.Antecedent(np.arange(0, 101, 1), 'temperature')

# Fuzzy output variable
fan_speed = ctrl.Consequent(np.arange(0, 101, 1), 'fan_speed')

# Membership functions
temperature['low'] = fuzz.trimf(temperature.universe, [0, 25, 50])
temperature['medium'] = fuzz.trimf(temperature.universe, [25, 50, 75])
temperature['high'] = fuzz.trimf(temperature.universe, [50, 75, 100])

fan_speed['slow'] = fuzz.trimf(fan_speed.universe, [0, 25, 50])
fan_speed['medium'] = fuzz.trimf(fan_speed.universe, [25, 50, 75])
fan_speed['fast'] = fuzz.trimf(fan_speed.universe, [50, 75, 100])

# Fuzzy rules
rule1 = ctrl.Rule(temperature['low'], fan_speed['slow'])
rule2 = ctrl.Rule(temperature['medium'], fan_speed['medium'])
rule3 = ctrl.Rule(temperature['high'], fan_speed['fast'])

# Control System
fan_ctrl = ctrl.ControlSystem([rule1, rule2, rule3])
fan_speed_ctrl = ctrl.ControlSystemSimulation(fan_ctrl)

# Input temperature
fan_speed_ctrl.input['temperature'] = 65

# Compute the result
fan_speed_ctrl.compute()

# Output fan speed
print("Fan Speed:", fan_speed_ctrl.output['fan_speed'])

# Visualize the fuzzy membership functions and rules
temperature.view()
fan_speed.view()